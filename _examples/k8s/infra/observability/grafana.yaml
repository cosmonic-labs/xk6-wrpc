apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  serviceName: grafana-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        k6-stack: "true"
    spec:
      containers:
        - env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SERVER_NAME
              value: $(POD_NAME)
          image: grafana/grafana:11.2.0
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
            - containerPort: 3000
              name: grafana
              protocol: TCP
          # resources:
          #   limits:
          #     cpu: "1"
          #     ephemeral-storage: 1Gi
          #     memory: 1Gi
          #   requests:
          #     cpu: "1"
          #     ephemeral-storage: 1Gi
          #     memory: 1Gi
          securityContext:
            capabilities:
              drop:
                - NET_RAW
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: config
              subPath: grafana-datasources.yaml
            - mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              name: config
              subPath: grafana-dashboards.yaml
            - mountPath: /dashboards
              name: dashboards
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
      volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - configMap:
            defaultMode: 420
            name: grafana-dashboards
          name: dashboards
        - emptyDir: {}
          name: pid
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana-headless
spec:
  clusterIP: None
  internalTrafficPolicy: Cluster
  ports:
    - appProtocol: tcp
      name: grafana
      port: 3000
      protocol: TCP
      targetPort: grafana
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: grafana
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
spec:
  internalTrafficPolicy: Cluster
  ports:
    - appProtocol: tcp
      name: grafana
      port: 3000
      protocol: TCP
      targetPort: grafana
  selector:
    app.kubernetes.io/name: grafana
  sessionAffinity: None
  type: ClusterIP
